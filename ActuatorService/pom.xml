<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- Basic project configuration -->
    <modelVersion>4.0.0</modelVersion>
    
    <!-- Parent project details: Inherit dependencies, plugins, and configuration from AquaManage -->
    <parent> 
        <!-- Parent groupId and artifactId -->
        <groupId>com.dragonfish</groupId>
        <artifactId>AquaManage</artifactId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- ActuatorService Module Information -->
    <groupId>com.DragonFish.aquaManage</groupId>
    <artifactId>ActuatorService</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ActuatorService</name>
    <description>Service for Managing Actuators</description>

    <!-- Java version to be used by the project -->
    <properties>
        <java.version>21</java.version>
    </properties>

    <!-- Dependencies for the project -->
    <dependencies>
        <!-- Spring Boot Actuator for monitoring and management -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- MQTT (Paho) for message handling between sensors/actuators -->
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!-- Spring WebFlux for building reactive services -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Lombok for simplifying code by generating boilerplate code like getters and setters -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring Boot Starter Test: Main testing framework with Spring-related utilities -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Reactor Test: For reactive programming testing in WebFlux -->
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Security Test: To write test cases for secured endpoints -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Integration for HTTP messaging -->
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-http</artifactId>
        </dependency>

        <!-- Logging dependencies using Log4j for debugging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.23.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.23.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>2.23.1</version>
        </dependency>

        <!-- Lombok to be provided at compile time (not included in final JAR) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!-- Build configuration using the Spring Boot Maven Plugin -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <!-- Create an executable JAR with dependencies -->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Main class to launch the Spring Boot application -->
                    <mainClass>com.DragonFish.aquaManage.ActuatorService.ActuatorServiceApplication</mainClass>
                    <excludes>
                        <!-- Exclude Lombok from final packaging -->
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
